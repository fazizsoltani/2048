name: Deploy Github Pages

on:
  push:
    branches:
      - master

env:
  NODE_VERSION: "8.12.0"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "lts/*"

      - name: Checking Code-Style
        run: yarn check-style

      - name: Checking Code-Quality
        run: yarn lint

      - name: Install dependencies
        run: yarn add --dev semantic-release @semantic-release/exec

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release --debug

        #      - name: Yarn install
        #        run: |
        #          npm install -g yarn
        #          yarn install

        #      - name: Yarn build
        #        run: yarn build

      - name: create variables
        id: releaseVariables
        run: |
          echo "::set-output name=RELEASEEXIST::$(cat nextrelease |grep nextReleaseExist|cut -d "=" -f2)"
          echo "::set-output name=VERSION::$(cat nextrelease |grep nextReleaseVersion|cut -d "=" -f2)"

      - name: Login to Docker Hub
        if: steps.releaseVariables.outputs.RELEASEEXIST == 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        if: steps.releaseVariables.outputs.RELEASEEXIST == 'true'
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        if: steps.releaseVariables.outputs.RELEASEEXIST == 'true'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/2048:${{ steps.releaseVariables.outputs.VERSION }}
